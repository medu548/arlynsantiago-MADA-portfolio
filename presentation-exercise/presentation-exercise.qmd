---
title: "Presentation Exercise"
---

## Data visualization

For this exercise I chose a graph from the "Hip-Hop Is Turning On Donald Trump" article by Allison McCann from FiveThirtyEight (<https://projects.fivethirtyeight.com/clinton-trump-hip-hop-lyrics/>). The graph displays whether the references about presidential candidates in music were classified as positive, negative, or neutral. For example, “I’m rich just like Donald Trump” received a classification of “positive.” “Negative” classifications went to those that were explicitly derogatory or misogynistic/sexist such as “Never put your trust in Hillary Rodham”. References that didn’t express an opinion were classified as "neutral".

This is the original graph from the article:

![Caption](Reference.png)\

```{r}
# loading the libraries I might need
library(tidyverse)
library(scales)
library(here)
library(readr)
library(ggplot2)
library(dplyr)

# loading the data 
lyric_data <- read_csv(here("presentation-exercise","genius_hip_hop_lyrics.csv")) 

# to visualize structure of dataset
str(lyric_data) 

```

```{r}

# Convert album_release_date to a date format and extract the year
lyric_data$year <- format(as.Date(as.character(lyric_data$album_release_date), format = "%Y"), "%Y")

# Calculate the count and then percentage of each sentiment per year
percent_summary <- lyric_data %>%
  group_by(year, sentiment) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(total = sum(count), percentage = (count / total) * 100)

# Create the scatter plot 
ggplot(percent_summary, aes(x = year, y = percentage, color = sentiment)) +
  geom_point() +
  scale_x_discrete(guide = guide_axis(angle = 90)) +
  labs(title = "Percentage of Sentiment by Year", x = "Year",y = "Percentage", color = "Sentiment") +
  theme_minimal()
# I had an issue where the x-axis labels were too congested so I rotated them 90 degress by following the code written on https://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2
```

```{r}
# Convert album_release_date to a two-digit year format
lyric_data$year <- format(as.Date(as.character(lyric_data$album_release_date), format = "%Y"), "%y")
lyric_data$year <- paste0("'", lyric_data$year) # not really sure what this means used chatGPT on this part

# Create a scatterplot second attempt
ggplot(lyric_data, aes(x = year, y = sentiment, color = candidate)) +
  geom_point() +
  labs(x = "Year", y = "Percent", title = "Sentiment Analysis by Candidate By Year") +
  theme_minimal() +
  scale_color_discrete(name = "Candidate")

#also need to fix x-axis
```

```{r}
#I will now try to create a table of the percentage of each sentiment within the lyric_data dataset

# Percent needs to be calculated as the percentage of each sentiment per year and candidate
percent_count <- lyric_data %>%
  group_by(year, candidate, sentiment) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(total = sum(count), percent = (count / total) * 100)

percent_count <-factor(lyric_data$sentiment)

# I will use table1 to create a table
library(table1) 
percent_count_table <- table1(~ percent_count | sentiment, data=lyric_data)
percent_count_table # just focus on overall

```

Now to create individual scatterplots with the different classifications...

```{r}

# Convert album_release_date to a two-digit year format
lyric_data$year <- format(as.Date(as.character(lyric_data$album_release_date), format = "%Y"), "%y")
lyric_data$year <- paste0("'", lyric_data$year)

percent_count2 <- lyric_data %>%
  group_by(year, candidate, sentiment) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(total = sum(count), percent = (count / total) * 100)


# Define custom colors for candidates
candidate_colors <- c("Donald Trump" = "orange", 
                      "Hillary Clinton" = "lightblue", 
                      "Jeb Bush" = "red", 
                      "Chris Christie" = "yellow", 
                      "Mike Huckabee" = "pink", 
                      "Bernie Sanders" = "green", 
                      "Ben Carson" = "lightgreen", 
                      "Ted Cruz" = "lightyellow") #had to choose light yellow because light red was not an option and light pink was too close to pink


# Create separate scatterplots for each sentiment and rotate x-axis labels by 90 degrees
ggplot(percent_count2, aes(x = year, y = percent, color = candidate)) +
  geom_point() +
  facet_wrap(~sentiment, scales = "free_y") + # used for free scales...
  labs(title = "Sentiment Analysis by Candidate By Year", x = "Year", y = "Percent") +

  # tried using scale_x_continuous(limit = c(as.Date(1990), as.Date(1995), as.Date(2000), as.Date(2005), as.Date(2010), as.Date(2015))) + to select for specific year but did not work
  
  theme_minimal() +
  theme(axis.text.x = element_text(size = 3, angle = 90)) +
  scale_color_discrete(name = "Candidate")


```

I think minus the x-axis label size and colors I came pretty close!
