---
title: "Tidy Tuesday Exercise"
---
## Exercise 13
Dataset is available on [GitHub](https://github.com/rfordatascience/tidytuesday/tree/6f3c0fdf804a1b5f4047705be60668e5c8312806/data/2024/2024-04-09).
```{r}
# load the data directly from GitHub
#eclipse_annular_2023 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_annular_2023.csv')
#eclipse_total_2024 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_total_2024.csv')
#eclipse_partial_2023 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_partial_2023.csv')
#eclipse_partial_2024 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_partial_2024.csv')

```

```{r}
# use cleaning script provided from GitHub repository to clean data 

# the following packages were installed: "janitor", "jsonlite", "fs", "class"

```

```{r}
# load all the libraries I can think of/need
library(tidyverse)
library(jsonlite)
library(janitor)
library(fs)
library(ggplot2)
library(tidymodels)
library(here)
library(pROC)
library(readr)
library(lubridate) # to use hms
library(knitr) # to use kable
library(patchwork) # to combine plots

working_dir <- here::here("tidytuesday-exercise", "Data")

eclipse_cities_url_2024 <- "https://svs.gsfc.nasa.gov/vis/a000000/a005000/a005073/cities-eclipse-2024.json"
eclipse_cities_url_2023 <- "https://svs.gsfc.nasa.gov/vis/a000000/a005000/a005073/cities-eclipse-2023.json"

eclipse_cities_url_2024 <- "https://svs.gsfc.nasa.gov/vis/a000000/a005000/a005073/cities-eclipse-2024.json"
eclipse_cities_url_2023 <- "https://svs.gsfc.nasa.gov/vis/a000000/a005000/a005073/cities-eclipse-2023.json"

eclipse_cities_2024 <- jsonlite::fromJSON(eclipse_cities_url_2024) |> 
  tibble::as_tibble() |> 
  janitor::clean_names() |> 
  tidyr::unnest_wider(eclipse, names_sep = "_")

eclipse_total_2024 <- eclipse_cities_2024 |> 
  dplyr::filter(!is.na(eclipse_6))

eclipse_partial_2024 <- eclipse_cities_2024 |> 
  dplyr::filter(is.na(eclipse_6)) |> 
  dplyr::select(-eclipse_6)

eclipse_cities_2023 <- jsonlite::fromJSON(eclipse_cities_url_2023) |> 
  tibble::as_tibble() |> 
  janitor::clean_names() |> 
  tidyr::unnest_wider(eclipse, names_sep = "_")

eclipse_annular_2023 <- eclipse_cities_2023 |> 
  dplyr::filter(!is.na(eclipse_6))

eclipse_partial_2023 <- eclipse_cities_2023 |> 
  dplyr::filter(is.na(eclipse_6)) |> 
  dplyr::select(-eclipse_6)

readr::write_csv(
  eclipse_total_2024,
  fs::path(working_dir, "eclipse_total_2024.csv")
)
readr::write_csv(
  eclipse_partial_2024,
  fs::path(working_dir, "eclipse_partial_2024.csv")
)

readr::write_csv(
  eclipse_annular_2023,
  fs::path(working_dir, "eclipse_annular_2023.csv")
)
readr::write_csv(
  eclipse_partial_2023,
  fs::path(working_dir, "eclipse_partial_2023.csv")
)
```

# Exploratory Data Analysis
```{r}
# first I will do summary statistics for the eclipse total in 2024 and the partial eclipse 2024

summary(eclipse_total_2024)
str(eclipse_total_2024)
summary(eclipse_partial_2024)
str(eclipse_partial_2024)

# Next I will generate a map to visualize this data
# first I will need to load map data for the USA
map_usa <- map_data("usa") # friend who took this class told me about using map_data to make life easier

map_total2024 <- plot_total_2024 <- ggplot() +
  geom_polygon(data = map_usa, aes(x = long, y = lat, group = group), fill = "gray80", color = "gray60") +
  geom_point(data = eclipse_total_2024, aes(x = lon, y = lat), color = "blue") +
  labs(title = "Total Eclipse 2024", size=12) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
map_total_eclipse2024


map_partial2024 <- ggplot() +
  geom_polygon(data = map_usa, aes(x = long, y = lat, group = group), fill = "gray80", color = "gray60") +
  geom_point(data = eclipse_partial_2024, aes(x = lon, y = lat), color = "blue") +
  labs(title = "Partial Eclipse 2024", size=12) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

map_partial2024 # I have no idea why only blue and not gray shows

#Combine plots to view 
combined_plot2024 <- (map_total2024 + map_partial2024 + plot_layout(nrow = 2, byrow = TRUE)) +
  plot_annotation((title="Partial vs Total Eclipse 2024"),
  theme = theme(plot.title = element_text(hjust = 0.5, size = 16))) # used ChatGPT for this part

combined_plot2024 
```


My question is which city in the U.S experienced the longest duration of the Total Eclipse during 2024? (easy enough question I think)


After failing to view any useful summary statistics since none of the eclipses were numeric variables, I looked into the dataset again using glimpse to see that eclipse 3 and 4 both contain start and stop times. By subtracting the times I should be able to answer the question. 

```{r}
eclipse_total_2024 <- eclipse_total_2024 %>%
mutate(eclipse_3 = hms(eclipse_3), eclipse_4 = hms(eclipse_4))

eclipse_duration <- eclipse_total_2024 %>%
   mutate(time_difference = eclipse_4 - eclipse_3) %>%
  group_by(name) %>%
  summarize(max_difference = max(time_difference, na.rm = TRUE)) %>%
  arrange(desc(max_difference)) %>%
  slice(1) #https://www.codecademy.com/forum_questions/50e9d4e7b647277a5a00bdc7#:~:text=The%20slice()%20method%20extract,position%201%2C%20and%20so%20on.

answer <- eclipse_duration$name

# so someone helped out and told me I had to go back to original dataset and use filter to find name of city...still new to coding
city_name <- eclipse_total_2024 %>% #piping makes everything easier
  filter(name == answer)
  
print(city_name)
```